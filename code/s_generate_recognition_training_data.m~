%list all files 
%image file root
imageRoot = '../files/';

%read ground truth file
gtFilePath = strcat(imageRoot, 'gt.txt');

%rGTdata contains fileNo, ROI, and class info
rGTdata = TSD_readGTData(gtFilePath);

numOfTrafficSigns = size(rGTdata,2);

prohibitoryFiles = [];
mandatoryFiles = [];
dangerFiles = [];
otherFiles = [];

%number of samples in 600 images
trainingLimit = 852;

%filter ground truth data
for i = 1:trainingLimit
    if strcmp(rGTdata(i).category,'mandatory')
        mandatoryFiles = [mandatoryFiles; rGTdata(i)];
    elseif strcmp(rGTdata(i).category, 'prohibitory')
        prohibitoryFiles = [prohibitoryFiles; rGTdata(i)];
    elseif strcmp(rGTdata(i).category, 'danger')
        dangerFiles = [dangerFiles; rGTdata(i)];
    elseif strcmp(rGTdata(i).category, 'other')
        otherFiles = [otherFiles; rGTdata(i)];
    end
end

%generate training data for prohibitory files
prohibitoryFeatures = f_generate_recognition_training_data( prohibitoryFiles, imageRoot );
prohibitoryMean = mean(prohibitoryFeatures, 1);
meanMat = repmat(prohibitoryMean, [size(prohibitoryFeatures, 1),1]);
prohibitoryFeatures = prohibitoryFeatures - meanMat;


%generate training data for mandatory files
[mandatoryFeatures, mandatoryMean, mandatoryStd] = f_generate_recognition_training_data( mandatoryFiles, imageRoot);

%generate training data for danger files
dangerFeatures = f_generate_recognition_training_data( dangerFiles, imageRoot);
dangerMean = mean(dangerFeatures, 1);
meanMat = repmat(dangerMean, [size(dangerFeatures, 1),1]);
dangerFeatures = dangerFeatures - meanMat;

otherFeatures = f_generate_recognition_training_data(otherFiles, imageRoot);
otherMean = mean(otherFeatures, 1);
meanMat = repmat(otherMean, [size(otherFeatures, 1),1]);
otherFeatures = otherFeatures - meanMat;
